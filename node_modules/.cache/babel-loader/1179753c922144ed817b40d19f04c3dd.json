{"ast":null,"code":"const initialState = {\n  banChon: false,\n  soBanThang: 10,\n  soBanChoi: 20,\n  arrXucXac: [{\n    soDiem: 1,\n    hinhAnh: './img/gameXucXac/1.png'\n  }, {\n    soDiem: 2,\n    hinhAnh: './img/gameXucXac/2.png'\n  }, {\n    soDiem: 3,\n    hinhAnh: './img/gameXucXac/3.png'\n  }]\n};\nexport const xucXacRducer = (state = initialState, action) => {\n  console.log('action', action);\n\n  switch (action.type) {\n    case 'DAT_CUOC':\n      {\n        state.banChon = action.banChon;\n        console.log('state.banChon', state.banChon);\n        return { ...state\n        }; //immutable (bất biến của redux)\n      }\n\n    case 'BAT_DAU_CHOI':\n      {\n        //xử lý kết quả trò chơi\n        state.soBanChoi = state.soBanChoi + 1;\n        let arrXucXacNgauNhien = [];\n\n        for (let i = 0; i < 3; i++) {\n          //Mỗi lần lặp sẽ tạo ra 1 số ngẫu nhiên\n          let soNgauNhien = Math.floor(Math.random() * 6) + 1; //Từ số ngẫu nhiên sẽ tạo 1 object xúc xắc ngẫu nhiên\n\n          let xucXacNgauNhien = {\n            soDiem: soNgauNhien,\n            hinhAnh: `./img/gameXucXac/${soNgauNhien}.png`\n          };\n          arrXucXacNgauNhien.push(xucXacNgauNhien);\n        }\n\n        state.arrXucXac = arrXucXacNgauNhien; //Tính tổng điểm\n        // let tongDiem = 0;\n        // for(let xucNN of arrXucXacNgauNhien) {\n        //   tongDiem += xucNN.soDiem;\n        // }\n\n        let tongDiem = arrXucXacNgauNhien.reduce((td, xucXacNN, index) => {\n          return td = td + xucXacNN.soDiem;\n        }, 0);\n        console.log('tongDiem', tongDiem);\n\n        if (tongDiem > 11 && state.banChon || tongDiem <= 11 && !state.banChon) {\n          //Cập nhật số bàn thắng\n          state.soBanThang += 1;\n        }\n\n        console.log('xucXacNgauNhien', arrXucXacNgauNhien);\n        return { ...state\n        };\n      }\n  }\n\n  return state;\n};","map":{"version":3,"sources":["C:/Users/Dell/Documents/BootCampCapToc/Process Code/React JS/reactjs-redux-game-xuc-xac/src/redux/reducers/xucXacReducer.js"],"names":["initialState","banChon","soBanThang","soBanChoi","arrXucXac","soDiem","hinhAnh","xucXacRducer","state","action","console","log","type","arrXucXacNgauNhien","i","soNgauNhien","Math","floor","random","xucXacNgauNhien","push","tongDiem","reduce","td","xucXacNN","index"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AACHC,EAAAA,UAAU,EAAE,EADT;AACaC,EAAAA,SAAS,EAAE,EADxB;AAC4BC,EAAAA,SAAS,EAAE,CACxD;AAAEC,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GADwD,EAExD;AAAED,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAFwD,EAGxD;AAAED,IAAAA,MAAM,EAAE,CAAV;AAAaC,IAAAA,OAAO,EAAE;AAAtB,GAHwD;AADvC,CAArB;AAWA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AAEA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,UAAL;AAAiB;AACfJ,QAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACR,OAAvB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BH,KAAK,CAACP,OAAlC;AACA,eAAO,EAAC,GAAGO;AAAJ,SAAP,CAHe,CAGI;AACpB;;AAED,SAAK,cAAL;AAAqB;AACnB;AACAA,QAAAA,KAAK,CAACL,SAAN,GAAkBK,KAAK,CAACL,SAAN,GAAkB,CAApC;AAEA,YAAIU,kBAAkB,GAAG,EAAzB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B;AACA,cAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAAlD,CAF0B,CAG1B;;AACA,cAAIC,eAAe,GAAG;AAAEd,YAAAA,MAAM,EAAEU,WAAV;AAAuBT,YAAAA,OAAO,EAAG,oBAAmBS,WAAY;AAAhE,WAAtB;AAEAF,UAAAA,kBAAkB,CAACO,IAAnB,CAAwBD,eAAxB;AACD;;AACDX,QAAAA,KAAK,CAACJ,SAAN,GAAkBS,kBAAlB,CAbmB,CAcnB;AACA;AACA;AACA;AACA;;AACA,YAAIQ,QAAQ,GAAGR,kBAAkB,CAACS,MAAnB,CAA0B,CAACC,EAAD,EAAKC,QAAL,EAAeC,KAAf,KAAyB;AAChE,iBAAOF,EAAE,GAAGA,EAAE,GAAIC,QAAQ,CAACnB,MAA3B;AACD,SAFc,EAEZ,CAFY,CAAf;AAIAK,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBU,QAAvB;;AAEA,YAAIA,QAAQ,GAAG,EAAX,IAAiBb,KAAK,CAACP,OAAxB,IAAqCoB,QAAQ,IAAI,EAAZ,IAAkB,CAACb,KAAK,CAACP,OAAjE,EAA2E;AACzE;AACAO,UAAAA,KAAK,CAACN,UAAN,IAAoB,CAApB;AACD;;AAGDQ,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,kBAA/B;AAEA,eAAO,EAAE,GAAGL;AAAL,SAAP;AACD;AAzCH;;AA4CA,SAAOA,KAAP;AACD,CAhDM","sourcesContent":["const initialState = {\r\n  banChon: false, soBanThang: 10, soBanChoi: 20, arrXucXac: [\r\n    { soDiem: 1, hinhAnh: './img/gameXucXac/1.png' },\r\n    { soDiem: 2, hinhAnh: './img/gameXucXac/2.png' },\r\n    { soDiem: 3, hinhAnh: './img/gameXucXac/3.png' },\r\n  ]\r\n};\r\n\r\n\r\n\r\n\r\nexport const xucXacRducer = (state = initialState, action) => {\r\n  console.log('action', action);\r\n\r\n  switch (action.type) {\r\n    case 'DAT_CUOC': {\r\n      state.banChon = action.banChon;\r\n      console.log('state.banChon',state.banChon)\r\n      return {...state} ;//immutable (bất biến của redux)\r\n    }\r\n\r\n    case 'BAT_DAU_CHOI': {\r\n      //xử lý kết quả trò chơi\r\n      state.soBanChoi = state.soBanChoi + 1;\r\n\r\n      let arrXucXacNgauNhien = [];\r\n      for (let i = 0; i < 3; i++) {\r\n        //Mỗi lần lặp sẽ tạo ra 1 số ngẫu nhiên\r\n        let soNgauNhien = Math.floor(Math.random() * 6) + 1;\r\n        //Từ số ngẫu nhiên sẽ tạo 1 object xúc xắc ngẫu nhiên\r\n        let xucXacNgauNhien = { soDiem: soNgauNhien, hinhAnh: `./img/gameXucXac/${soNgauNhien}.png` };\r\n\r\n        arrXucXacNgauNhien.push(xucXacNgauNhien);\r\n      }\r\n      state.arrXucXac = arrXucXacNgauNhien;\r\n      //Tính tổng điểm\r\n      // let tongDiem = 0;\r\n      // for(let xucNN of arrXucXacNgauNhien) {\r\n      //   tongDiem += xucNN.soDiem;\r\n      // }\r\n      let tongDiem = arrXucXacNgauNhien.reduce((td, xucXacNN, index) => {\r\n        return td = td +  xucXacNN.soDiem;\r\n      }, 0);\r\n\r\n      console.log('tongDiem',tongDiem)\r\n\r\n      if((tongDiem > 11 && state.banChon) || (tongDiem <= 11 && !state.banChon)) {\r\n        //Cập nhật số bàn thắng\r\n        state.soBanThang += 1;\r\n      }\r\n\r\n\r\n      console.log('xucXacNgauNhien', arrXucXacNgauNhien)\r\n\r\n      return { ...state }\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}